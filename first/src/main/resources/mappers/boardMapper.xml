<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.board.mappers.board">
	<!-- 게시물 목록 -->
	<select id="list" resultType="com.board.domain.BoardVO">
		select
		bno, title, content, writer, regDate, viewCnt
		from springboard.tbl_board
	</select>

	<!-- 게시물 작성 -->
	<insert id="write" parameterType="hashMap">
		insert into
		<if test='boardType.equals("board")'>
				tbl_board(title, content, writer,student_id,listType)
			</if>
			<if test='boardType.equals("school")'>
				tbl_school(title, content, writer,student_id,listType)
			</if>
			<if test='boardType.equals("share")'>
				tbl_share(title, content, writer,student_id,listType)
			</if> 
		values(#{title}, #{content}, #{writer}, #{student_id}, #{listType})
	</insert>

	<!-- 게시물 조회 -->
	<select id="view" parameterType="hashMap"
		resultType="com.board.domain.BoardVO">
		select
			bno, title, content, writer, regDate, viewCnt, student_id
		from
			<if test='boardType.equals("board")'>
				tbl_board
			</if>
			<if test='boardType.equals("school")'>
				tbl_school
			</if>
			<if test='boardType.equals("share")'>
				tbl_share
			</if> 
		where
			bno = #{bno}
	</select>

	<!-- 게시물 수정 -->
	<select id="modify" parameterType="hashMap">
		update 
			<if test='boardType.equals("board")'>
				tbl_board
			</if>
			<if test='boardType.equals("school")'>
				tbl_school
			</if>
			<if test='boardType.equals("share")'>
				tbl_share
			</if> 
		set
			title = #{title},
			content=#{content},
			listType = #{listType}
		where bno = #{bno}
	</select>

	<!-- 게시물 삭제 -->
	<delete id="delete" parameterType="hashMap">
		delete
		from 
			<if test='boardType.equals("board")'>
				tbl_board
			</if>
			<if test='boardType.equals("school")'>
				tbl_school
			</if>
			<if test='boardType.equals("share")'>
				tbl_share
			</if> 
		where bno = #{bno}
	</delete>

	<!-- 게시물 총 갯수 -->
	<select id="count" resultType="int">
		select count(bno) from tbl_board
	</select>

	<!-- 게시물 목록 + 페이징 -->
	<select id="listPage" parameterType="hashMap"
		resultType="com.board.domain.BoardVO">
		select
		bno, title, writer, regDate, viewCnt
		from tbl_board
		order by bno desc
		limit #{displayPost}, #{postNum}
	</select>

	<!-- 게시물 목록 + 페이징 + 검색 -->
	<select id="listPageSearch" parameterType="hashMap"
		resultType="com.board.domain.BoardVO">
		select
		bno, title, writer, regDate, viewCnt
		from 
			<if test='boardType.equals("board")'>
				tbl_board
			</if>
			<if test='boardType.equals("school")'>
				tbl_school
			</if>
			<if test='boardType.equals("share")'>
				tbl_share
			</if> 
		
		<if test='searchType.equals("title")'>
			where title LIKE concat('%',#{keyword},'%')
		</if>

		<if test='searchType.equals("content")'>
			where content LIKE concat('%',#{keyword},'%')
		</if>

		<if test='searchType.equals("title_content")'>
			where title LIKE concat('%',#{keyword},'%')
			or content LIKE
			concat('%',#{keyword},'%')
		</if>

		<if test='searchType.equals("writer")'>
			where writer LIKE concat('%',#{keyword},'%')
		</if>
		and listType = #{listType}
		order by bno desc
		limit #{displayPost}, #{postNum}
	</select>

	<!-- 게시물 총 갯수 + 검색 적용 -->
	<select id="searchCount" parameterType="hashMap"
		resultType="int">
		select 
			count(bno) 
		from 
			<if test='boardType.equals("board")'>
				tbl_board
			</if>
			<if test='boardType.equals("school")'>
				tbl_school
			</if>
			<if test='boardType.equals("share")'>
				tbl_share
			</if> 

		<if test='searchType.equals("title")'>
			WHERE title LIKE concat('%', #{keyword}, '%')
		</if> 

		<if test='searchType.equals("content")'>
			WHERE content LIKE concat('%', #{keyword}, '%')
		</if> 

		<if test='searchType.equals("title_content")'>
			WHERE title LIKE concat('%', #{keyword}, '%')
			or content LIKE concat('%', #{keyword}, '%')
		</if>

		<if test='searchType.equals("writer")'>
			WHERE writer LIKE concat('%', #{keyword}, '%')
		</if>
		and listType = #{listType}
	</select>
	
	<update id="viewCnt" parameterType="hashMap">
		update
			<if test='boardType.equals("board")'>
				tbl_board
			</if>
			<if test='boardType.equals("school")'>
				tbl_school
			</if>
			<if test='boardType.equals("share")'>
				tbl_share
			</if> 
		set
			viewCnt = viewCnt +1
		where 
			bno = #{bno}
	</update>
	
	
	<!-- 댓글 리스트 -->
	<select id="boardReplyList" resultType="com.board.domain.BoardReplyVO" parameterType="hashMap">
		select
			reply_id,
			board_bno,
			parent_id,
			depth,
			reply_content,
			reply_writer,
			register_datetime
		from 
			board_reply
		where 
			board_bno = #{bno} and listType = #{listType}
		order by reply_id asc
	</select>
	
	<!-- 댓글 등록 -->
	<insert id = "insertBoardReply" parameterType="hashMap" useGeneratedKeys="true" keyProperty="reply_id">
		insert into board_reply(
			board_bno,
			listType,
			parent_id,
			depth,
			reply_content,
			reply_writer,
			student_id
		)values(
			#{board_bno},
			#{listType},
			#{parent_id},
			#{depth},
			#{reply_content},
			#{reply_writer},
			#{student_id}
		)
	</insert>
	
	<!-- 댓글 삭제 -->
	<delete id="deleteBoardReply" parameterType="hashMap">
		delete
		from
			board_reply
		where
			reply_id = #{reply_id}
			and student_id = #{student_id}
	</delete>
	
	<!-- 대댓글까지 삭제 -->
	<delete id="deleteBoardReplyAll" parameterType="hashMap">
        delete
        from
            board_reply
        where
            reply_id in (
                select
                    reply_id
                from
                (select
                    reply_id
                from
                    board_reply
                where
                    reply_id = #{reply_id}
                    and student_id = #{student_id}) a
            ) or parent_id in (
                select
                    reply_id
                from
                (select
                    reply_id
                from
                    board_reply
                where
                    reply_id = #{reply_id}
                    and student_id=#{student_id}) a
            )
    </delete>
	<!-- 댓글 수정 -->
	<update id="updateReply" parameterType="hashMap">
		update
			board_reply
		set 
			parent_id = #{parent_id},
			depth = #{depth},
			reply_content = #{reply_content},
			reply_writer = #{reply_writer},
			student_id = #{student_id}
		where
			reply_id = #{reply_id}
	</update>
	
	<!-- 댓글 사용자 확인 -->
	<select id="selectReplyStudent_id" resultType="int" parameterType="java.util.HashMap">
        select
            count(*)
        from
            board_reply
        where
            reply_id = #{reply_id}
            and student_id = #{student_id}
	</select>
	
	<!-- 가장 많은 조회 게시물 -->
	<select id="highViewCnt" resultType="com.board.domain.BoardVO">
		SELECT *
		FROM 
			tbl_board UNION (SELECT  * FROM tbl_school UNION(SELECT * FROM tbl_share))
		ORDER BY viewCnt desc
		LIMIT 4
	</select>
	
	<!-- 가장 최근 게시물 -->
	<select id="recentView" resultType="com.board.domain.BoardVO">
		SELECT *
		FROM 
			tbl_board UNION (SELECT  * FROM tbl_school UNION(SELECT * FROM tbl_share))
		ORDER BY regDate desc
		LIMIT 4;
	</select>
	
</mapper>